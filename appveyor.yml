version: 1.0.{build}
image: Visual Studio 2017
configuration:
- Debug
environment:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
before_build:
- choco install codecov
- choco install opencover.portable
- 
build_script:
- dotnet build "KafkaAvroNet.sln" -c %CONFIGURATION%
after_build:
- dotnet pack Core/KafkaAvroNet.SchemaRegistry/KafkaAvroNet.SchemaRegistry.csproj -c "Debug" --no-build --output ..\..\nupkgs
- dotnet pack Kafka-Net-Manager/KafkaAvroNet/KafkaAvroNet.csproj -c "Debug" --no-build --output ..\..\nupkgs 
- dotnet pack Core/KafkaAvroNet.Avro/KafkaAvroNet.Avro.csproj -c "Debug" --no-build --output ..\..\nupkgs
- dotnet pack Core/KafkaAvroNet.Kafka/KafkaAvroNet.Kafka.csproj -c "Debug" --no-build --output ..\..\nupkgs
test_script:
- ps: ForEach ($folder in (Get-ChildItem -Path test -Directory)) { C:\ProgramData\chocolatey\lib\opencover.portable\tools\opencover.console.exe -register:user -target:"C:/Program Files/dotnet/dotnet.exe" -targetargs:"test $($folder.FullName) --no-build" -oldStyle -filter:"+[*]*" -mergebyhash -mergeoutput -output:"coverage.xml" }
- ps: codecov -f .\coverage.xml -t '1209a029-06ac-4908-8fa7-50f92ce3095a'
- ps: dir
artifacts:
- path: 'nupkgs\*.nupkg'
deploy:
  provider: NuGet
  api_key:
    secure: usNVNoWxrMEIDR+XenAm4dE2xn59gYMVEi0Gsd9v0FZcQ6BFo126Ax6wp5QRGU/N
  skip_symbols: false
  artifact: /.*\.nupkg/
  on:
    branch: master
   # Deploy to GitHub Releases
- provider: GitHub
  artifact: /.*\.nupkg/           # upload all NuGet packages to release assets
  draft: false
  prerelease: false
  on:
    branch: master                # release from master branch only
    appveyor_repo_tag: true       # deploy on tag push only


